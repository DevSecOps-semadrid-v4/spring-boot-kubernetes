pool:
  vmImage: ubuntu-latest
stages:
- stage: Build
  jobs:
      - job: build
        displayName: 'Build'
        steps:
            - task: Maven@4
              inputs:
                  mavenPomFile: 'pom.xml'
                  publishJUnitResults: true
                  testResultsFiles: '**/surefire-reports/TEST-*.xml'
                  javaHomeOption: 'JDKVersion'
                  mavenVersionOption: 'Default'
                  mavenAuthenticateFeed: false
                  effectivePomSkip: false
                  sonarQubeRunAnalysis: false

- stage: Sonar
  jobs:
    - job: SonarCloud
      steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'sonarCloud'
          organization: 'devsecops-semadrid-v4'
          projectKey: 'DevSecOps-semadrid-v4_spring-boot-kubernetes'
          projectName: 'spring-boot-kubernetes'
        displayName: 'Prepare SonarCloud'
      - task: Maven@4
        inputs:
            mavenPomFile: 'pom.xml'
            publishJUnitResults: true
            testResultsFiles: '**/surefire-reports/TEST-*.xml'
            javaHomeOption: 'JDKVersion'
            mavenVersionOption: 'Default'
            mavenAuthenticateFeed: false
            effectivePomSkip: false
            sonarQubeRunAnalysis: true
            sqMavenPluginVersionChoice: 'latest'
        displayName: 'Sonarqube'
      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'sonarCloud'
          organization: 'devsecops-semadrid-v4'
        displayName: 'SonarCloud Build Braker'

- stage: OWASP
  jobs:
    - job: Dependency-Check
      steps:
      - task: dependency-check-build-task@6
        inputs:
          projectName: 'spring-boot-kubernetes'
          scanPath: '$(Pipeline.Workspace)'
          format: 'HTML'
        displayName: 'Dependency Check OWASP'
        
- stage: Container-Security
  jobs:
    - job: Container-Security
      steps:
      - task: DockerInstaller@0
        inputs:
            dockerVersion: '17.09.0-ce'
        displayName: 'Docker Installer'
      - task: Docker@2
        inputs:
            containerRegistry: 'Docker'
            command: 'login'
        displayName: 'Docker Login'
      - task: Docker@2
        inputs:
            containerRegistry: 'Docker'
            command: 'build'
            Dockerfile: '**/Dockerfile'
            tags: 'latest'
        displayName: 'Docker Build'
      - script: |
          sudo apt-get install -y rpm
          wget https://github.com/aquasecurity/trivy/releases/download/v0.27.1/trivy_0.27.1_Linux-64bit.deb
          sudo dpkg -i trivy_0.27.1_Linux-64bit.deb
          trivy image semadrid/spring-boot-kubernete:latest
        displayName: Image Scan
      - task: Docker@2
        inputs:
            containerRegistry: 'Docker'
            repository: 'semadrid/spring-boot-kubernete'
            command: 'push'
            Dockerfile: '**/Dockerfile'
            tags: 'latest'
        displayName: 'Docker Push'